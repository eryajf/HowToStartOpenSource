import{_ as o,r as i,o as r,c as l,a as t,b as n,d as a,e as d}from"./app-6e4b3321.js";const c={},p={href:"https://github.com/marketplace/actions/toc-generator",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/marketplace/actions/toc-generator#options",target:"_blank",rel:"noopener noreferrer"};function g(m,e){const s=i("ExternalLinkIcon");return r(),l("div",null,[e[5]||(e[5]=t("p",null,[n("GitHub's Markdown does not currently support direct "),t("code",null,"[TOC]"),n(" rendering of article directories, some READMEs require such effects, which can be generated with the help of external tools or automatically generated with the help of "),t("code",null,"GitHub Actions"),n(", which is described in this article.")],-1)),t("p",null,[e[1]||(e[1]=n("Actions used：")),t("a",p,[e[0]||(e[0]=n("TOC Generator")),a(s)])]),e[6]||(e[6]=d(`<p>Using the configuration is actually very simple, basically after reading the official introduction document you can get started to use, here is one or two things to pay attention to.</p><p>First of all, you need to specify the directory generation location, e.g. <code>README.md</code> in the file where the directory will be generated, and add the following content in the place to be generated:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;!-- START doctoc --&gt;
&lt;!-- END doctoc --&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Then add the Actions profile，e.g. <code>.github/workflows/toc.yml</code>：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">on</span><span class="token punctuation">:</span> push
<span class="token key atrule">name</span><span class="token punctuation">:</span> TOC Generator
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">generateTOC</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> TOC Generator
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> technote<span class="token punctuation">-</span>space/toc<span class="token punctuation">-</span>generator@v4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, you need to adjust the project&#39;s Actions permissions，Click on GitHub, <code>settings</code>--&gt; <code>actions</code> --&gt; <code>General</code> --&gt; <code>Workflow permissions</code> --&gt; choose <code>Read and write permissions</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220718_172340.png" alt="image_20220718_172340"></p><p>After the configuration adjustment is completed, you can push the project to see the effect, of course, you can also pass the GitHub_Token way of certification here, so I won&#39;t repeat it.</p><p>The effect is presented as follows:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_110310.png" alt="image_20220719_110310"></p>`,10)),t("p",null,[e[3]||(e[3]=t("code",null,"Configure the list：",-1)),e[4]||(e[4]=n()),t("a",u,[e[2]||(e[2]=n("see")),a(s)])]),e[7]||(e[7]=t("p",null,"It can be configured according to your actual needs and situation!",-1)),e[8]||(e[8]=t("h2",{id:"other-than-that",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#other-than-that","aria-hidden":"true"},"#"),n(" Other than that")],-1)),e[9]||(e[9]=t("p",null,"Later, I learned a trick in one place, it turned out that GitHub already supports the directory method by default for Markdown files, and also supports search, as follows：",-1)),e[10]||(e[10]=t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_110613.png",alt:"image_20220719_110613"})],-1))])}const f=o(c,[["render",g],["__file","01-Automatically-add-TOC-directories-for-README.html.vue"]]);export{f as default};
