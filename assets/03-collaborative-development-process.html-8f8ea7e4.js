import{_ as n,o as s,c as a,e as t}from"./app-6e4b3321.js";const i={};function o(l,e){return s(),a("div",null,e[0]||(e[0]=[t(`<p>When our project attracts more students&#39; attention, some students with ideas may participate, as project maintainers, we will face the first issue, the first PR, don&#39;t panic at this time, open source is a very inclusive concept, and even sometimes no one pays attention to one of your mistakes, but you don&#39;t want to be unscrupulous, because there will be people who pay attention to your every intention and detail.</p><p>Now I&#39;m here to use another account, a simulated project collaborator, to see what the process will go through.</p><p>Note that the next description will switch between the two accounts, here is the first overview of the two account roles:</p><ul><li>eryajf：Project owner。</li><li>lql95：Project collaborator.</li></ul><p>Usually, as collaborators, we fork the project into our own repository first:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220718_171810.png" alt="image_20220718_171810"></p><p>Now that I&#39;m in the perspective of lql95, I&#39;ve forked the project I just named Eryajf to my own repository, at this point I can pull the project to my own local for coding:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> clone git@github.com:lql95/learn-github.git

$ <span class="token builtin class-name">cd</span> learn-github
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Change the README content to read as follows:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> README.md
<span class="token comment"># learn-github</span>
Learn about GitHub interactions and features Simulate a modification commit.

This is new <span class="token keyword">in</span> lql95

- a
- b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After coding, you can commit the code to your remote repository, as follows:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ git add .
$ git commit -m &#39;Collaborative maintenance projects from the perspective of lql95&#39;
$ git push --set-upstream origin main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>At this time, the remote repository of lql95 can actually be equivalent to the test branch that has just been maintained by itself, and we need to go to the eryajf repository to ask the other party to pull their own changes:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220718_171822.png" alt="image_20220718_171822"></p><p>At this time, the remote repository of lql95 can actually be equivalent to the test branch that has just been maintained by itself, and we need to go to the eryajf repository to ask the other party to pull their own changes:</p><p>After creating the PR, lql95 suddenly found that there was still something to change, so it carried out another wave of encoding operations:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># The adjusted content is as follows</span>
$ <span class="token function">cat</span> README.md
<span class="token comment"># learn-github</span>
Learn about GitHub interactions and features

This is new <span class="token keyword">in</span> lql95

- a
- b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then submit again:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ git add .
$ git commit -m &#39;Removed useless content&#39;
$ git push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This commit will also be presented on top of the PR just created, now let&#39;s look at this PR from eryajf&#39;s perspective:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220718_171832.png" alt="image_20220718_171832"></p><p>You can see the 2 commits of lql95, you can also view the details of this PR on the difference page, because this interaction content is not much, so it looks relatively simple here, in the real project collaboration process, a PR change file may be dozens, at this time through the page is very unintuitive, can be processed locally in the following way.</p><p>In your own local project directory，Open the <code>.git/config</code> file，Add a line after <code>[remote &quot;origin&quot;]</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fetch = +refs/pull/*/head:refs/pull/origin/*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Then execute a <code>git pull</code> to pull the remote content locally:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> pull
remote: Enumerating objects: <span class="token number">11</span>, done.
remote: Counting objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">11</span>/11<span class="token punctuation">)</span>, done.
remote: Compressing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">5</span>/5<span class="token punctuation">)</span>, done.
remote: Total <span class="token number">7</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>, reused <span class="token number">6</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>, pack-reused <span class="token number">0</span>
Unpacking objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">7</span>/7<span class="token punctuation">)</span>, <span class="token number">1.28</span> KiB <span class="token operator">|</span> <span class="token number">435.00</span> KiB/s, done.
From github.com:eryajf/learn-github
   85630a4<span class="token punctuation">..</span>421212d  main             -<span class="token operator">&gt;</span> origin/main
 * <span class="token punctuation">[</span>new ref<span class="token punctuation">]</span>         refs/pull/1/head -<span class="token operator">&gt;</span> refs/pull/origin/1
 * <span class="token punctuation">[</span>new ref<span class="token punctuation">]</span>         refs/pull/2/head -<span class="token operator">&gt;</span> refs/pull/origin/2
Your configuration specifies to merge with the ref <span class="token string">&#39;refs/heads/test&#39;</span>
from the remote, but no such ref was fetched.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can see that there are two PRs, we switch the branch to the second PR and create a new branch locally:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ git checkout -b eryajf_test refs/pull/origin/2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>At this time, the project will locally store the latest code after this PR as a eryajf_test branch, we can do some verification and other work on the code submitted by the collaborators, and when we test and feel that there is no problem, we can merge the code. The operation of merging is the same as above, and will not be repeated.</p>`,29)]))}const c=n(i,[["render",o],["__file","03-collaborative-development-process.html.vue"]]);export{c as default};
