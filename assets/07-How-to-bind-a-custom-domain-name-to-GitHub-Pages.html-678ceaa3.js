import{_ as a,r as i,o as s,c as r,a as t,b as o,d as p,e as d}from"./app-6e4b3321.js";const g={},l={href:"https://github.com/eryajf/vdoing-template",target:"_blank",rel:"noopener noreferrer"};function u(m,e){const n=i("ExternalLinkIcon");return s(),r("div",null,[e[3]||(e[3]=t("p",null,[o("现在越来越多的开发者选择基于 GitHub Pages 构建自己的网站，GitHub Pages 的默认访问方式为 "),t("code",null,"{username}.github.io"),o("，而如果你凑巧，还有一个个人域名，那么其实还可以将自己自定义的域名 CNAME 到 GitHub 默认的访问域名，这样就能实现，基于自己的个性化域名，访问 GitHub Pages 的能力了，或者说得更彻底点，在建个人站点这件事儿上，与 GitHub 的结合，你只需要凑一个域名就能搞定了。")],-1)),e[4]||(e[4]=t("p",null,"有同学对于如何将个人域名绑定到 GitHub Pages 不太了解，本文就来讲讲，如何操作。",-1)),t("p",null,[e[1]||(e[1]=o("关于如何借助 GitHub Pages 建立个人站点，我的模板项目 ")),t("a",l,[e[0]||(e[0]=o("vdoing-template")),p(n)]),e[2]||(e[2]=o(" 已经详细介绍过，就不再赘述。"))]),e[5]||(e[5]=d('<p>接下来只需要两步配置就可以完成这个操作。</p><p>首先来到 GitHub 当中，在 <code>Settings</code> --&gt; <code>Pages</code> 中添加<code>CNAME:</code></p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220727_200747.png" alt="image_20220727_200747"></p><p>然后在个人的域名解析处，添加一条 CNAME 记录：</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220727_200900.png" alt="image_20220727_200900"></p><p>然后回到 GitHub 配置页面，查看检查是否成功。成功之后，使用 http://pages.eryajf.net 就可以访问网站了。</p><hr><p><code>注意：</code>目前看来，貌似不支持子路由的配置，比如你无法配置 <code>test.eryajf.net</code> 解析到 <code>eryajf.github.io/test</code>。</p>',8))])}const b=a(g,[["render",u],["__file","07-How-to-bind-a-custom-domain-name-to-GitHub-Pages.html.vue"]]);export{b as default};
