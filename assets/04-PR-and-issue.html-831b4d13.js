import{_ as i,r as o,o as c,c as r,e as n,a,b as t,d as l}from"./app-6e4b3321.js";const d={},p={href:"https://docs.github.com/cn/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue",target:"_blank",rel:"noopener noreferrer"};function h(m,e){const s=o("ExternalLinkIcon");return c(),r("div",null,[e[7]||(e[7]=n(`<p>When we need to solve a bug in a project, usually a new <code>PR</code> will be accompanied by an <code>issue</code>, this article will introduce only one operation when creating a <code>PR</code>, associate the <code>issue</code> , and then when the <code>PR</code> is approved, the corresponding associated &#39;issue&#39; will also be closed.</p><p>Again, I&#39;ll start by creating an <code>issue</code> in the sample project:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_145415.png" alt="image_20220719_145415"></p><p>In this case, as the project maintainer, we can directly click <code>Create a branch</code> in <code>Development</code> to create a fix branch, which will automatically associate the <code>issue</code>, and similarly, when the <code>PR</code> created by the fix branch is merged, the <code>issue </code>will be automatically closed.</p><p>However, this kind of scheme is not mentioned here, and you can experience it for yourself if you are interested</p><p>Here is our more common operation, in the local editor, based on the latest <code>main branch</code> cut out a <code>fix</code> branch, as follows:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout main
<span class="token function">git</span> pull
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> fix_testbug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then there is the fix for the corresponding problem on the <code>fix_testbug</code> branch, which is not repeated.</p><p>When we feel that the fix is okay and have self-tested, we can commit this temporary branch:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;fix: test bug&quot;</span>
<span class="token function">git</span> push --set-upstream origin fix_testbug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After pushing to the remote, we come to the GitHub page, at which point we can see that GitHub will automatically prompt a new branch to merge:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_150429.png" alt="image_20220719_150429"></p><p>You can directly click <code>Compare &amp; pull request</code>:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_151051.png" alt="image_20220719_151051"></p>`,14)),a("p",null,[e[1]||(e[1]=t("Pay attention to the instructions in ")),e[2]||(e[2]=a("code",null,"Development",-1)),e[3]||(e[3]=t(" on the right, we can add some by adding some to the instructions")),a("a",p,[e[0]||(e[0]=t("keywords")),l(s)]),e[4]||(e[4]=t("，This associates the ")),e[5]||(e[5]=a("code",null,"issue",-1)),e[6]||(e[6]=t(" and triggers a shutdown. Of course, you can also create a PR first and then associate it:"))]),e[8]||(e[8]=n(`<p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_151313.png" alt="image_20220719_151313"></p><p>After completing the associated PR, you can see that there is a status display like this:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_151423.png" alt="image_20220719_151423"></p><p>At this time, we click on the <code>#21</code> <code>issue</code>, and we can also see that it is linked to the <code>PR</code>:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_151547.png" alt="image_20220719_151547"></p><p>Now we merge the <code>#23</code> <code>PR</code> , and after the merge, you can see that the associated <code>issue</code> has also been closed, and the temporary branch of the link has been deleted:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_151825.png" alt="image_20220719_151825"></p><p>The above is the linkage maintenance of <code>PR</code> and <code>issue</code> in project collaboration.</p><hr><p><strong>Other than that：</strong> A small point here, when we go through a PR process, as the main maintainer of the project, we usually switch back to the main branch again, and then pull the code that was merged into the main branch remotely:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout main
<span class="token function">git</span> pull
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>After executing this way, you will find that the local code has exceeded the remote branch:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_154112.png" alt="image_20220719_154112"></p><p>Among them, 389fe is the ID of the current remote branch, we can execute the following command to align with the remote:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> reset <span class="token parameter variable">--hard</span> origin/main
HEAD is now at 389fe7b fix: <span class="token builtin class-name">test</span> bug <span class="token punctuation">(</span><span class="token comment">#23)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>In this way, the local and remote are aligned, and the next time you re-branch and then commit a PR, there will be no <code>several merges</code> like the above.</p><p>The illustration is as follows:</p><p><img src="https://cdn.jsdelivr.net/gh/eryajf/tu/img/image_20220719_154244.png" alt="image_20220719_154244"></p><p>Theoretically, there is only one commit this time, instead of 3 <code>commits</code>, which is why.</p>`,19))])}const g=i(d,[["render",h],["__file","04-PR-and-issue.html.vue"]]);export{g as default};
